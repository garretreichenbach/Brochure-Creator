import{logger as e}from"../logger.mjs";export class WebSearcher{constructor(r={url:"http://localhost:3003/api",searchFilters:{maxResults:10,includeTypes:{articles:!0,images:!0,videos:!0},timeframe:"all"}}){e.log("WebSearcher initialized.")}async handleSearch(r){if(getSearchQuery.trim())try{const t={query:searchQuery,maxResults:searchFilters.maxResults,filters:{contentTypes:Object.entries(searchFilters.includeTypes).filter((([e,r])=>r)).map((([e])=>e)),timeframe:searchFilters.timeframe,language:searchFilters.language}};e.log(`Searching for query: ${r}`);await fetch("http://localhost:3003/api/websearch",t,{headers:{"Content-Type":"application/json",Accept:"application/json",Referer:window.location.origin},withCredentials:!0,timeout:1e4})}catch(t){e.error(`Failed to search for query: ${r}`)}}getSearchQuery(){return document.getElementById("search-query-box").value}}export const webSearcher=new WebSearcher;